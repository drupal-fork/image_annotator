<?php
// $Id$
/**
 * @file
 *
 */
/**
 * Implements hook_field_info()
 */
function image_annotator_field_info() {
  return array(
    'image_annotator' => array(
      'label' => t('Image Annotator'),
      'default_formatter' => 'image_annotator',
      'default_widget' => 'image_annotator_hidden',
      'instance_settings' => array(
        'image_field' => '',
      ),
    )
  );
}

/**
 * Implements hook_field_is_empty()
 */
function image_annotator_field_is_empty($item, $field) {
  return empty($item['value']);
}

/**
 * Implements hook_field_formatter_info()
 */
function image_annotator_field_formatter_info() {
  return array(
    'image_annotator' => array(
      'label' => t('Default'),
      'field types' => array('image_annotator'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view()
 */
function image_annotator_field_formatter_view ($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $settings = $instance['settings'];
  $element = array();

  foreach ($items as $delta => $item) {
    $text = '';

    if (isset($item['value'])) {
      $text = $item['value'];
    }
    $element[$delta]['image_annotator_coordinates'] = array(
      '#type' => 'hidden',
      '#value' => $text,
      '#attributes' => array(
        'id' => $field['field_name'] . '__' . $langcode . '__' . $delta . '__coordinates',
        'class' => array('image-annotator-pointers'),
      )
    );
    $element[$delta]['image_annotator_button'] = array(
      '#type' => 'hidden',
      '#value' => '',
      '#attributes' => array(
        'class' => array('image-annotator-button'),
        'rel' => 'field-name-' . drupal_clean_css_identifier($settings['image_field']),
        'id' => $field['field_name'] . '__' . $langcode . '__' . $delta . '__button',
      ),
    );
  }
  drupal_add_js(drupal_get_path('module', 'image_annotator') . '/image_annotator.js');
  drupal_add_css(drupal_get_path('module', 'image_annotator') . '/image_annotator.css');
  return $element;
}

/**
 * Implements hook_field_instance_settings_form()
 */
function image_annotator_field_instance_settings_form($field, $instance) {
  $settings = $instance['settings'];
  $fields = field_info_fields();
  $options = drupal_map_assoc(array_keys(array_filter($fields, 'image_annotator_is_image_field')));
  $form['image_field'] = array(
    '#type' => 'select',
    '#options' => $options,
    '#required' => TRUE,
    '#default_value' => $settings['image_field'],
    '#description' => t('Choose the image field you want to annotate'),
    '#title' => t('Image field'),
  );
  return $form;
}

/**
 * Implements hook_field_widget_info()
 */
function image_annotator_field_widget_info() {
  return array(
    'image_annotator_hidden' => array(
      'label' => t('Image Annotator'),
      'field types' => array('image_annotator'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function image_annotator_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $settings = $instance['settings'];
  $element['value'] = array(
    '#type' => 'hidden',
    '#default_value' => isset($items[$delta]['value']) ? $items[$delta]['value'] : '',
    '#attributes' => array(
      'id' => $field['field_name'] . '__' . $langcode . '__' . $delta . '__coordinates',
      'class' => array('image-annotator-pointers'),
    )
  );
  $element['image_annotator_button'] = array(
    '#type' => 'button',
    '#value' => t('Place on image'),
    '#attributes' => array(
      'class' => array('image-annotator-button'),
      'rel' => 'edit-' . drupal_clean_css_identifier($settings['image_field']),
      'id' => $field['field_name'] . '__' . $langcode . '__' . $delta . '__button',
    ),
  );
  drupal_add_js(drupal_get_path('module', 'image_annotator') . '/image_annotator.js');
  drupal_add_css(drupal_get_path('module', 'image_annotator') . '/image_annotator.css');
  return $element;
}

function image_annotator_is_image_field($field) {
  return $field['type'] == 'image';
}
